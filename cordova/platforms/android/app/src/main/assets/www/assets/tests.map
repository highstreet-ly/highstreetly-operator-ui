{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","highstreetly-operator-ui/tests/helpers/ember-simple-auth.js","highstreetly-operator-ui/tests/integration/pods/components/cloudinary-image/component-test.js","highstreetly-operator-ui/tests/integration/pods/components/component-loading/component-test.js","highstreetly-operator-ui/tests/integration/pods/components/items-list/component-test.js","highstreetly-operator-ui/tests/integration/pods/components/operator-services-panel/component-test.js","highstreetly-operator-ui/tests/integration/pods/components/order-panel/component-test.js","highstreetly-operator-ui/tests/integration/pods/components/orders-panel/component-test.js","highstreetly-operator-ui/tests/integration/pods/components/section-loading/component-test.js","highstreetly-operator-ui/tests/integration/pods/components/time-ago/component-test.js","highstreetly-operator-ui/tests/test-helper.js","highstreetly-operator-ui/tests/unit/controllers/u/index-test.js","highstreetly-operator-ui/tests/unit/models/event-instance-test.js","highstreetly-operator-ui/tests/unit/models/event-organiser-test.js","highstreetly-operator-ui/tests/unit/models/event-series-test.js","highstreetly-operator-ui/tests/unit/models/order-test.js","highstreetly-operator-ui/tests/unit/models/order-ticket-test.js","highstreetly-operator-ui/tests/unit/models/product-extra-group-test.js","highstreetly-operator-ui/tests/unit/models/product-extra-test.js","highstreetly-operator-ui/tests/unit/models/ticket-detail-test.js","highstreetly-operator-ui/tests/unit/models/ticket-type-configuration-test.js","highstreetly-operator-ui/tests/unit/models/user-test.js","highstreetly-operator-ui/tests/unit/pods/application/route-test.js","highstreetly-operator-ui/tests/unit/pods/callback/route-test.js","highstreetly-operator-ui/tests/unit/pods/index/route-test.js","highstreetly-operator-ui/tests/unit/pods/login/controller-test.js","highstreetly-operator-ui/tests/unit/pods/login/route-test.js","highstreetly-operator-ui/tests/unit/pods/u/index/route-test.js","highstreetly-operator-ui/tests/unit/pods/u/order/route-test.js","highstreetly-operator-ui/tests/unit/pods/u/orders/controller-test.js","highstreetly-operator-ui/tests/unit/pods/u/orders/index/route-test.js","highstreetly-operator-ui/tests/unit/pods/u/orders/order/route-test.js","highstreetly-operator-ui/tests/unit/pods/u/orders/route-test.js","highstreetly-operator-ui/tests/unit/services/current-user-test.js","highstreetly-operator-ui/tests/unit/services/highstreetly-ajax-test.js","highstreetly-operator-ui/tests/unit/services/highstreetly-printer-test.js","highstreetly-operator-ui/tests/unit/services/highstreetly-signalr-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"highstreetly-operator-ui/tests/helpers/ember-simple-auth\", [\"exports\", \"ember-simple-auth/authenticators/test\"], function (_exports, _test) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.authenticateSession = authenticateSession;\n  _exports.currentSession = currentSession;\n  _exports.invalidateSession = invalidateSession;\n  const TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    const authenticator = container.lookup(TEST_CONTAINER_KEY);\n\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _test.default);\n    }\n  }\n\n  function deprecateOldTestingApi() {\n    (true && !(false) && Ember.deprecate('Ember Simple Auth: The legacy testing API is deprecated; switch to the new testing helpers available from \"ember-simple-auth/test-support\".', false, {\n      id: `ember-simple-auth.testing.legacy-testing-api`,\n      until: '3.0.0'\n    }));\n  }\n\n  function authenticateSession(app, sessionData) {\n    deprecateOldTestingApi();\n    const {\n      __container__: container\n    } = app;\n    const session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return app.testHelpers.wait();\n  }\n\n  function currentSession(app) {\n    deprecateOldTestingApi();\n    return app.__container__.lookup('service:session');\n  }\n\n  function invalidateSession(app) {\n    deprecateOldTestingApi();\n\n    const session = app.__container__.lookup('service:session');\n\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n\n    return app.testHelpers.wait();\n  }\n});","define(\"highstreetly-operator-ui/tests/integration/pods/components/cloudinary-image/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | cloudinary-image', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <CloudinaryImage />\n      */\n      {\n        \"id\": \"mJM5sdab\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"cloudinary-image\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <CloudinaryImage>\n              template block text\n            </CloudinaryImage>\n          \n      */\n      {\n        \"id\": \"egQqQui9\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"cloudinary-image\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/integration/pods/components/component-loading/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | component-loading', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <ComponentLoading />\n      */\n      {\n        \"id\": \"ZZkUgHyw\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"component-loading\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <ComponentLoading>\n              template block text\n            </ComponentLoading>\n          \n      */\n      {\n        \"id\": \"esii+e8P\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"component-loading\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/integration/pods/components/items-list/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | items-list', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <ItemsList />\n      */\n      {\n        \"id\": \"dCwqSpoL\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"items-list\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <ItemsList>\n              template block text\n            </ItemsList>\n          \n      */\n      {\n        \"id\": \"VEQyk0NJ\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"items-list\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/integration/pods/components/operator-services-panel/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | operator-services-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <OperatorServicesPanel />\n      */\n      {\n        \"id\": \"YtW6UPIL\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"operator-services-panel\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <OperatorServicesPanel>\n              template block text\n            </OperatorServicesPanel>\n          \n      */\n      {\n        \"id\": \"WSjFolOn\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"operator-services-panel\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/integration/pods/components/order-panel/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | order-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <OrderPanel />\n      */\n      {\n        \"id\": \"PNGLmYV6\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"order-panel\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <OrderPanel>\n              template block text\n            </OrderPanel>\n          \n      */\n      {\n        \"id\": \"hc+wzeWx\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"order-panel\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/integration/pods/components/orders-panel/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | orders-panel', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <OrdersPanel />\n      */\n      {\n        \"id\": \"sAGlcwwj\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"orders-panel\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <OrdersPanel>\n              template block text\n            </OrdersPanel>\n          \n      */\n      {\n        \"id\": \"OoZtziK+\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"orders-panel\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/integration/pods/components/section-loading/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | section-loading', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <SectionLoading />\n      */\n      {\n        \"id\": \"j8nmTmKi\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"section-loading\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <SectionLoading>\n              template block text\n            </SectionLoading>\n          \n      */\n      {\n        \"id\": \"qgPUbIC6\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"section-loading\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/integration/pods/components/time-ago/component-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | time-ago', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <TimeAgo />\n      */\n      {\n        \"id\": \"kyyY75sj\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"time-ago\\\",[],[[],[]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), ''); // Template block usage:\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <TimeAgo>\n              template block text\n            </TimeAgo>\n          \n      */\n      {\n        \"id\": \"Q+H9zRJU\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"time-ago\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"\\\\n        template block text\\\\n      \\\"]],\\\"parameters\\\":[]}]]],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/test-helper\", [\"highstreetly-operator-ui/app\", \"highstreetly-operator-ui/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"highstreetly-operator-ui/tests/unit/controllers/u/index-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | u/index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:u/index');\n      assert.ok(controller);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/event-instance-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | event instance', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('event-instance', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/event-organiser-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | event organiser', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('event-organiser', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/event-series-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | event series', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('event-series', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/order-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | order', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('order', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/order-ticket-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | order ticket', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('order-ticket', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/product-extra-group-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | product extra group', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('product-extra-group', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/product-extra-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | product extra', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('product-extra', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/ticket-detail-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | ticket detail', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('ticket-detail', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/ticket-type-configuration-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | ticket type configuration', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('ticket-type-configuration', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/models/user-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | user', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('user', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/application/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:application');\n      assert.ok(route);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/callback/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | callback', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:callback');\n      assert.ok(route);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/index/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:index');\n      assert.ok(route);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/login/controller-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | login', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:login');\n      assert.ok(controller);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/login/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | login', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:login');\n      assert.ok(route);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/u/index/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | u/index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:u/index');\n      assert.ok(route);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/u/order/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | u/order', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:u/order');\n      assert.ok(route);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/u/orders/controller-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Controller | u/orders', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:u/orders');\n      assert.ok(controller);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/u/orders/index/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | u/orders/index', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:u/orders/index');\n      assert.ok(route);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/u/orders/order/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | u/orders/order', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:u/orders/order');\n      assert.ok(route);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/pods/u/orders/route-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | u/orders', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:u/orders');\n      assert.ok(route);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/services/current-user-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | current-user', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:current-user');\n      assert.ok(service);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/services/highstreetly-ajax-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | highstreetly-ajax', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:highstreetly-ajax');\n      assert.ok(service);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/services/highstreetly-printer-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | highstreetly-printer', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:highstreetly-printer');\n      assert.ok(service);\n    });\n  });\n});","define(\"highstreetly-operator-ui/tests/unit/services/highstreetly-signalr-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Service | highstreetly-signalr', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // TODO: Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let service = this.owner.lookup('service:highstreetly-signalr');\n      assert.ok(service);\n    });\n  });\n});","define('highstreetly-operator-ui/config/environment', [], function() {\n  var prefix = 'highstreetly-operator-ui';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('highstreetly-operator-ui/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}